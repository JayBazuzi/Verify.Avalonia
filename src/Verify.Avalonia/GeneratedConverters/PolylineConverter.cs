// <auto-generated />
#nullable enable
class PolylineConverter :
    WriteOnlyJsonConverter<Polyline>,
    IAvaloniaConverter<Polyline>
{
    public override void Write(VerifyJsonWriter writer, Polyline value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ShapeConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Polyline value)
    {
        if (!object.Equals(Polyline.PointsProperty.GetDefaultValue(typeof(Polyline)), value.Points))
        {
            writer.WriteMember(value, value.Points, "Points");
        }
    }

    public static bool MemberHasValue(Polyline target, string member, object? value)
    {
        if (member == "Points")
        {
            return object.Equals(target.Points, value);
        }
        ShapeConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

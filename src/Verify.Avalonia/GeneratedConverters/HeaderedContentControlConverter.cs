// <auto-generated />
#nullable enable
class HeaderedContentControlConverter :
    WriteOnlyJsonConverter<HeaderedContentControl>,
    IAvaloniaConverter<HeaderedContentControl>
{
    public override void Write(VerifyJsonWriter writer, HeaderedContentControl value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, HeaderedContentControl value)
    {
        if (!object.Equals(HeaderedContentControl.HeaderProperty.GetDefaultValue(typeof(HeaderedContentControl)), value.Header))
        {
            writer.WriteMember(value, value.Header, "Header");
        }
         writer.WriteMember(value, value.HeaderPresenter, "HeaderPresenter");
        if (!object.Equals(HeaderedContentControl.HeaderTemplateProperty.GetDefaultValue(typeof(HeaderedContentControl)), value.HeaderTemplate))
        {
            writer.WriteMember(value, value.HeaderTemplate, "HeaderTemplate");
        }
    }

    public static bool MemberHasValue(HeaderedContentControl target, string member, object? value)
    {
        if (member == "Header")
        {
            return object.Equals(target.Header, value);
        }
        if (member == "HeaderPresenter")
        {
            return object.Equals(target.HeaderPresenter, value);
        }
        if (member == "HeaderTemplate")
        {
            return object.Equals(target.HeaderTemplate, value);
        }
        ContentControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
#nullable enable
class ExpanderConverter :
    WriteOnlyJsonConverter<Expander>
{
    public override void Write(VerifyJsonWriter writer, Expander value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        HeaderedContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Expander value)
    {
        var type = typeof(Expander);
        if (value.ShouldIncludeProperty(Expander.ContentTransitionProperty))
        if (!object.Equals(Expander.ContentTransitionProperty.GetDefaultValue(type), value.ContentTransition))
        {
            writer.WriteMember(value, value.ContentTransition, "ContentTransition");
        }
        if (value.ShouldIncludeProperty(Expander.ExpandDirectionProperty))
        if (!object.Equals(Expander.ExpandDirectionProperty.GetDefaultValue(type), value.ExpandDirection))
        {
            writer.WriteMember(value, value.ExpandDirection, "ExpandDirection");
        }
        if (value.ShouldIncludeProperty(Expander.IsExpandedProperty))
        if (!object.Equals(Expander.IsExpandedProperty.GetDefaultValue(type), value.IsExpanded))
        {
            writer.WriteMember(value, value.IsExpanded, "IsExpanded");
        }
    }
}

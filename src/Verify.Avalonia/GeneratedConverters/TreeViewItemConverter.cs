// <auto-generated />
#nullable enable
class TreeViewItemConverter :
    WriteOnlyJsonConverter<TreeViewItem>
{
    public override void Write(VerifyJsonWriter writer, TreeViewItem value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        HeaderedItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, TreeViewItem value)
    {
        if (!object.Equals(TreeViewItem.IsExpandedProperty.GetDefaultValue(typeof(TreeViewItem)), value.IsExpanded))
        {
            writer.WriteMember(value, value.IsExpanded, "IsExpanded");
        }
        if (!object.Equals(TreeViewItem.IsSelectedProperty.GetDefaultValue(typeof(TreeViewItem)), value.IsSelected))
        {
            writer.WriteMember(value, value.IsSelected, "IsSelected");
        }
        if (!object.Equals(TreeViewItem.LevelProperty.GetUnsetValue(typeof(TreeViewItem)), value.Level))
        {
            writer.WriteMember(value, value.Level, "Level");
        }
    }

    public static bool MemberHasValue(TreeViewItem target, string member, object? value)
    {
        if (member == "IsExpanded")
        {
            return object.Equals(target.IsExpanded, value);
        }
        if (member == "IsSelected")
        {
            return object.Equals(target.IsSelected, value);
        }
        if (member == "Level")
        {
            return object.Equals(target.Level, value);
        }
        throw new($"Member not found: {member}");
    }
}

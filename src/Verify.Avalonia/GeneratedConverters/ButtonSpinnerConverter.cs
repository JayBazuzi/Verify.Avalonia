// <auto-generated />
#nullable enable
class ButtonSpinnerConverter :
    WriteOnlyJsonConverter<ButtonSpinner>
{
    public override void Write(VerifyJsonWriter writer, ButtonSpinner value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        SpinnerConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ButtonSpinner value)
    {
        if (!object.Equals(ButtonSpinner.AllowSpinProperty.GetDefaultValue(typeof(ButtonSpinner)), value.AllowSpin))
        {
            writer.WriteMember(value, value.AllowSpin, "AllowSpin");
        }
        if (!object.Equals(ButtonSpinner.ShowButtonSpinnerProperty.GetDefaultValue(typeof(ButtonSpinner)), value.ShowButtonSpinner))
        {
            writer.WriteMember(value, value.ShowButtonSpinner, "ShowButtonSpinner");
        }
        if (!object.Equals(ButtonSpinner.ButtonSpinnerLocationProperty.GetDefaultValue(typeof(ButtonSpinner)), value.ButtonSpinnerLocation))
        {
            writer.WriteMember(value, value.ButtonSpinnerLocation, "ButtonSpinnerLocation");
        }
    }

    public static bool MemberHasValue(ButtonSpinner target, string member, object? value)
    {
        if (member == "AllowSpin")
        {
            return object.Equals(target.AllowSpin, value);
        }
        if (member == "ShowButtonSpinner")
        {
            return object.Equals(target.ShowButtonSpinner, value);
        }
        if (member == "ButtonSpinnerLocation")
        {
            return object.Equals(target.ButtonSpinnerLocation, value);
        }
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
class ColorSliderConverter :
    WriteOnlyJsonConverter<ColorSlider>
{
    public override void Write(VerifyJsonWriter writer, ColorSlider value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        SliderConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ColorSlider value)
    {
        if (!ColorSlider.ColorProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.Color))
        {
            writer.WriteMember(value, value.Color, "Color");
        }
        if (!ColorSlider.ColorComponentProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.ColorComponent))
        {
            writer.WriteMember(value, value.ColorComponent, "ColorComponent");
        }
        if (!ColorSlider.ColorModelProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.ColorModel))
        {
            writer.WriteMember(value, value.ColorModel, "ColorModel");
        }
        if (!ColorSlider.HsvColorProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.HsvColor))
        {
            writer.WriteMember(value, value.HsvColor, "HsvColor");
        }
        if (!ColorSlider.IsAlphaVisibleProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.IsAlphaVisible))
        {
            writer.WriteMember(value, value.IsAlphaVisible, "IsAlphaVisible");
        }
        if (!ColorSlider.IsPerceptiveProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.IsPerceptive))
        {
            writer.WriteMember(value, value.IsPerceptive, "IsPerceptive");
        }
        if (!ColorSlider.IsRoundingEnabledProperty.GetDefaultValue(typeof(ColorSlider)).Equals(value.IsRoundingEnabled))
        {
            writer.WriteMember(value, value.IsRoundingEnabled, "IsRoundingEnabled");
        }
    }
}

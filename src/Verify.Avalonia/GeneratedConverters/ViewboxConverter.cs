// <auto-generated />
#nullable enable
class ViewboxConverter :
    WriteOnlyJsonConverter<Viewbox>
{
    public override void Write(VerifyJsonWriter writer, Viewbox value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Viewbox value)
    {
        if (!object.Equals(Viewbox.StretchProperty.GetDefaultValue(typeof(Viewbox)), value.Stretch))
        {
            writer.WriteMember(value, value.Stretch, "Stretch");
        }
        if (!object.Equals(Viewbox.StretchDirectionProperty.GetDefaultValue(typeof(Viewbox)), value.StretchDirection))
        {
            writer.WriteMember(value, value.StretchDirection, "StretchDirection");
        }
        if (!object.Equals(Viewbox.ChildProperty.GetDefaultValue(typeof(Viewbox)), value.Child))
        {
            writer.WriteMember(value, value.Child, "Child");
        }
    }

    public static bool MemberHasValue(Viewbox target, string member, object? value)
    {
        if (member == "Stretch")
        {
            return object.Equals(target.Stretch, value);
        }
        if (member == "StretchDirection")
        {
            return object.Equals(target.StretchDirection, value);
        }
        if (member == "Child")
        {
            return object.Equals(target.Child, value);
        }
        ControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

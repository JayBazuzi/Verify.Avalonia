// <auto-generated />
#nullable enable
class NotificationCardConverter :
    WriteOnlyJsonConverter<NotificationCard>,
    IAvaloniaConverter<NotificationCard>
{
    public override void Write(VerifyJsonWriter writer, NotificationCard value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, NotificationCard value)
    {
        if (value.ShouldIncludeProperty(NotificationCard.IsClosingProperty))
        if (!object.Equals(NotificationCard.IsClosingProperty.GetUnsetValue(typeof(NotificationCard)), value.IsClosing))
        {
            writer.WriteMember(value, value.IsClosing, "IsClosing");
        }
        if (value.ShouldIncludeProperty(NotificationCard.IsClosedProperty))
        if (!object.Equals(NotificationCard.IsClosedProperty.GetDefaultValue(typeof(NotificationCard)), value.IsClosed))
        {
            writer.WriteMember(value, value.IsClosed, "IsClosed");
        }
    }

    public static bool MemberHasValue(NotificationCard target, string member, object? value)
    {
        if (member == "IsClosing")
        {
            return object.Equals(target.IsClosing, value);
        }
        if (member == "IsClosed")
        {
            return object.Equals(target.IsClosed, value);
        }
        ContentControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

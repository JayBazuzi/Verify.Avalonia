// <auto-generated />
#nullable enable
class LineConverter :
    WriteOnlyJsonConverter<Line>,
    IAvaloniaConverter<Line>
{
    public override void Write(VerifyJsonWriter writer, Line value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ShapeConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Line value)
    {
        if (!object.Equals(Line.StartPointProperty.GetDefaultValue(typeof(Line)), value.StartPoint))
        {
            writer.WriteMember(value, value.StartPoint, "StartPoint");
        }
        if (!object.Equals(Line.EndPointProperty.GetDefaultValue(typeof(Line)), value.EndPoint))
        {
            writer.WriteMember(value, value.EndPoint, "EndPoint");
        }
    }

    public static bool MemberHasValue(Line target, string member, object? value)
    {
        if (member == "StartPoint")
        {
            return object.Equals(target.StartPoint, value);
        }
        if (member == "EndPoint")
        {
            return object.Equals(target.EndPoint, value);
        }
        ShapeConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

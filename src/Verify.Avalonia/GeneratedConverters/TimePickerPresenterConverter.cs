// <auto-generated />
#nullable enable
class TimePickerPresenterConverter :
    WriteOnlyJsonConverter<TimePickerPresenter>,
    IAvaloniaConverter<TimePickerPresenter>
{
    public override void Write(VerifyJsonWriter writer, TimePickerPresenter value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        PickerPresenterBaseConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, TimePickerPresenter value)
    {
        if (!object.Equals(TimePickerPresenter.MinuteIncrementProperty.GetDefaultValue(typeof(TimePickerPresenter)), value.MinuteIncrement))
        {
            writer.WriteMember(value, value.MinuteIncrement, "MinuteIncrement");
        }
        if (!object.Equals(TimePickerPresenter.ClockIdentifierProperty.GetDefaultValue(typeof(TimePickerPresenter)), value.ClockIdentifier))
        {
            writer.WriteMember(value, value.ClockIdentifier, "ClockIdentifier");
        }
        if (!object.Equals(TimePickerPresenter.TimeProperty.GetDefaultValue(typeof(TimePickerPresenter)), value.Time))
        {
            writer.WriteMember(value, value.Time, "Time");
        }
    }

    public static bool MemberHasValue(TimePickerPresenter target, string member, object? value)
    {
        if (member == "MinuteIncrement")
        {
            return object.Equals(target.MinuteIncrement, value);
        }
        if (member == "ClockIdentifier")
        {
            return object.Equals(target.ClockIdentifier, value);
        }
        if (member == "Time")
        {
            return object.Equals(target.Time, value);
        }
        PickerPresenterBaseConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

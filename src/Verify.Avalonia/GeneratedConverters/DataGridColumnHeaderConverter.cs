// <auto-generated />
#nullable enable
class DataGridColumnHeaderConverter :
    WriteOnlyJsonConverter<DataGridColumnHeader>,
    IAvaloniaConverter<DataGridColumnHeader>
{
    public override void Write(VerifyJsonWriter writer, DataGridColumnHeader value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, DataGridColumnHeader value)
    {
        if (value.ShouldIncludeProperty(DataGridColumnHeader.SeparatorBrushProperty))
        if (!object.Equals(DataGridColumnHeader.SeparatorBrushProperty.GetDefaultValue(typeof(DataGridColumnHeader)), value.SeparatorBrush))
        {
            writer.WriteMember(value, value.SeparatorBrush, "SeparatorBrush");
        }
        if (value.ShouldIncludeProperty(DataGridColumnHeader.AreSeparatorsVisibleProperty))
        if (!object.Equals(DataGridColumnHeader.AreSeparatorsVisibleProperty.GetDefaultValue(typeof(DataGridColumnHeader)), value.AreSeparatorsVisible))
        {
            writer.WriteMember(value, value.AreSeparatorsVisible, "AreSeparatorsVisible");
        }
    }

    public static bool MemberHasValue(DataGridColumnHeader target, string member, object? value)
    {
        if (member == "SeparatorBrush")
        {
            return object.Equals(target.SeparatorBrush, value);
        }
        if (member == "AreSeparatorsVisible")
        {
            return object.Equals(target.AreSeparatorsVisible, value);
        }
        ContentControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

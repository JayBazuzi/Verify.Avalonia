// <auto-generated />
#nullable enable
class NumericUpDownConverter :
    WriteOnlyJsonConverter<NumericUpDown>
{
    public override void Write(VerifyJsonWriter writer, NumericUpDown value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, NumericUpDown value)
    {
        var type = typeof(NumericUpDown);
        if (NumericUpDown.AllowSpinProperty.ShouldIncludeProperty(value, value.AllowSpin))
        {
            writer.WriteMember(value, value.AllowSpin, "AllowSpin");
        }
        if (NumericUpDown.ButtonSpinnerLocationProperty.ShouldIncludeProperty(value, value.ButtonSpinnerLocation))
        {
            writer.WriteMember(value, value.ButtonSpinnerLocation, "ButtonSpinnerLocation");
        }
        if (NumericUpDown.ShowButtonSpinnerProperty.ShouldIncludeProperty(value, value.ShowButtonSpinner))
        {
            writer.WriteMember(value, value.ShowButtonSpinner, "ShowButtonSpinner");
        }
        if (NumericUpDown.ClipValueToMinMaxProperty.ShouldIncludeProperty(value, value.ClipValueToMinMax))
        {
            writer.WriteMember(value, value.ClipValueToMinMax, "ClipValueToMinMax");
        }
        if (NumericUpDown.NumberFormatProperty.ShouldIncludeProperty(value, value.NumberFormat))
        {
            writer.WriteMember(value, value.NumberFormat, "NumberFormat");
        }
        if (NumericUpDown.FormatStringProperty.ShouldIncludeProperty(value, value.FormatString))
        {
            writer.WriteMember(value, value.FormatString, "FormatString");
        }
        if (NumericUpDown.IncrementProperty.ShouldIncludeProperty(value, value.Increment))
        {
            writer.WriteMember(value, value.Increment, "Increment");
        }
        if (NumericUpDown.IsReadOnlyProperty.ShouldIncludeProperty(value, value.IsReadOnly))
        {
            writer.WriteMember(value, value.IsReadOnly, "IsReadOnly");
        }
        if (NumericUpDown.MaximumProperty.ShouldIncludeProperty(value, value.Maximum))
        {
            writer.WriteMember(value, value.Maximum, "Maximum");
        }
        if (NumericUpDown.MinimumProperty.ShouldIncludeProperty(value, value.Minimum))
        {
            writer.WriteMember(value, value.Minimum, "Minimum");
        }
        if (NumericUpDown.ParsingNumberStyleProperty.ShouldIncludeProperty(value, value.ParsingNumberStyle))
        {
            writer.WriteMember(value, value.ParsingNumberStyle, "ParsingNumberStyle");
        }
        if (NumericUpDown.TextProperty.ShouldIncludeProperty(value, value.Text))
        {
            writer.WriteMember(value, value.Text, "Text");
        }
        if (NumericUpDown.TextConverterProperty.ShouldIncludeProperty(value, value.TextConverter))
        {
            writer.WriteMember(value, value.TextConverter, "TextConverter");
        }
        if (NumericUpDown.ValueProperty.ShouldIncludeProperty(value, value.Value))
        {
            writer.WriteMember(value, value.Value, "Value");
        }
        if (NumericUpDown.WatermarkProperty.ShouldIncludeProperty(value, value.Watermark))
        {
            writer.WriteMember(value, value.Watermark, "Watermark");
        }
        if (NumericUpDown.HorizontalContentAlignmentProperty.ShouldIncludeProperty(value, value.HorizontalContentAlignment))
        {
            writer.WriteMember(value, value.HorizontalContentAlignment, "HorizontalContentAlignment");
        }
        if (NumericUpDown.VerticalContentAlignmentProperty.ShouldIncludeProperty(value, value.VerticalContentAlignment))
        {
            writer.WriteMember(value, value.VerticalContentAlignment, "VerticalContentAlignment");
        }
        if (NumericUpDown.TextAlignmentProperty.ShouldIncludeProperty(value, value.TextAlignment))
        {
            writer.WriteMember(value, value.TextAlignment, "TextAlignment");
        }
    }
}

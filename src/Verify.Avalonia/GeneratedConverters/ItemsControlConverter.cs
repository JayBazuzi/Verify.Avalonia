// <auto-generated />
class ItemsControlConverter :
    WriteOnlyJsonConverter<ItemsControl>
{
    public override void Write(VerifyJsonWriter writer, ItemsControl value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ItemsControl value)
    {
        if (!object.Equals(ItemsControl.DisplayMemberBindingProperty.GetDefaultValue(typeof(ItemsControl)), value.DisplayMemberBinding))
        {
            writer.WriteMember(value, value.DisplayMemberBinding, "DisplayMemberBinding");
        }
         writer.WriteMember(value, value.ItemContainerGenerator, "ItemContainerGenerator");
         writer.WriteMember(value, value.Items, "Items");
        if (!object.Equals(ItemsControl.ItemContainerThemeProperty.GetDefaultValue(typeof(ItemsControl)), value.ItemContainerTheme))
        {
            writer.WriteMember(value, value.ItemContainerTheme, "ItemContainerTheme");
        }
        if (!object.Equals(ItemsControl.ItemCountProperty.GetUnsetValue(typeof(ItemsControl)), value.ItemCount))
        {
            writer.WriteMember(value, value.ItemCount, "ItemCount");
        }
        if (!object.Equals(ItemsControl.ItemsPanelProperty.GetDefaultValue(typeof(ItemsControl)), value.ItemsPanel))
        {
            writer.WriteMember(value, value.ItemsPanel, "ItemsPanel");
        }
        if (!object.Equals(ItemsControl.ItemsSourceProperty.GetDefaultValue(typeof(ItemsControl)), value.ItemsSource))
        {
            writer.WriteMember(value, value.ItemsSource, "ItemsSource");
        }
        if (!object.Equals(ItemsControl.ItemTemplateProperty.GetDefaultValue(typeof(ItemsControl)), value.ItemTemplate))
        {
            writer.WriteMember(value, value.ItemTemplate, "ItemTemplate");
        }
         writer.WriteMember(value, value.Presenter, "Presenter");
         writer.WriteMember(value, value.ItemsPanelRoot, "ItemsPanelRoot");
         writer.WriteMember(value, value.ItemsView, "ItemsView");
    }
}

// <auto-generated />
#nullable enable
class TreeViewConverter :
    WriteOnlyJsonConverter<TreeView>,
    IAvaloniaConverter<TreeView>
{
    public override void Write(VerifyJsonWriter writer, TreeView value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, TreeView value)
    {
         writer.WriteMember(value, value.ItemContainerGenerator, "ItemContainerGenerator");
        if (!object.Equals(TreeView.AutoScrollToSelectedItemProperty.GetDefaultValue(typeof(TreeView)), value.AutoScrollToSelectedItem))
        {
            writer.WriteMember(value, value.AutoScrollToSelectedItem, "AutoScrollToSelectedItem");
        }
        if (!object.Equals(TreeView.SelectionModeProperty.GetDefaultValue(typeof(TreeView)), value.SelectionMode))
        {
            writer.WriteMember(value, value.SelectionMode, "SelectionMode");
        }
        if (!object.Equals(TreeView.SelectedItemProperty.GetUnsetValue(typeof(TreeView)), value.SelectedItem))
        {
            writer.WriteMember(value, value.SelectedItem, "SelectedItem");
        }
        if (!object.Equals(TreeView.SelectedItemsProperty.GetUnsetValue(typeof(TreeView)), value.SelectedItems))
        {
            writer.WriteMember(value, value.SelectedItems, "SelectedItems");
        }
    }

    public static bool MemberHasValue(TreeView target, string member, object? value)
    {
        if (member == "ItemContainerGenerator")
        {
            return object.Equals(target.ItemContainerGenerator, value);
        }
        if (member == "AutoScrollToSelectedItem")
        {
            return object.Equals(target.AutoScrollToSelectedItem, value);
        }
        if (member == "SelectionMode")
        {
            return object.Equals(target.SelectionMode, value);
        }
        if (member == "SelectedItem")
        {
            return object.Equals(target.SelectedItem, value);
        }
        if (member == "SelectedItems")
        {
            return object.Equals(target.SelectedItems, value);
        }
        ItemsControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
#nullable enable
class WindowNotificationManagerConverter :
    WriteOnlyJsonConverter<WindowNotificationManager>
{
    public override void Write(VerifyJsonWriter writer, WindowNotificationManager value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, WindowNotificationManager value)
    {
        if (!object.Equals(WindowNotificationManager.PositionProperty.GetDefaultValue(typeof(WindowNotificationManager)), value.Position))
        {
            writer.WriteMember(value, value.Position, "Position");
        }
        if (!object.Equals(WindowNotificationManager.MaxItemsProperty.GetDefaultValue(typeof(WindowNotificationManager)), value.MaxItems))
        {
            writer.WriteMember(value, value.MaxItems, "MaxItems");
        }
    }

    public static bool MemberHasValue(WindowNotificationManager target, string member, object? value)
    {
        if (member == "Position")
        {
            return object.Equals(target.Position, value);
        }
        if (member == "MaxItems")
        {
            return object.Equals(target.MaxItems, value);
        }
        TemplatedControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

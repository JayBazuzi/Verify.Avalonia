// <auto-generated />
#nullable enable
class SpinnerConverter :
    WriteOnlyJsonConverter<Spinner>,
    IAvaloniaConverter<Spinner>
{
    public override void Write(VerifyJsonWriter writer, Spinner value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Spinner value)
    {
        if (value.ShouldIncludeProperty(Spinner.ValidSpinDirectionProperty))
        if (!object.Equals(Spinner.ValidSpinDirectionProperty.GetDefaultValue(typeof(Spinner)), value.ValidSpinDirection))
        {
            writer.WriteMember(value, value.ValidSpinDirection, "ValidSpinDirection");
        }
    }

    public static bool MemberHasValue(Spinner target, string member, object? value)
    {
        if (member == "ValidSpinDirection")
        {
            return object.Equals(target.ValidSpinDirection, value);
        }
        ContentControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

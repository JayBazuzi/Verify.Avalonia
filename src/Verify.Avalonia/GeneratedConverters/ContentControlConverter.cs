// <auto-generated />
#nullable enable
class ContentControlConverter :
    WriteOnlyJsonConverter<ContentControl>
{
    public override void Write(VerifyJsonWriter writer, ContentControl value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ContentControl value)
    {
        if (!object.Equals(ContentControl.ContentProperty.GetDefaultValue(typeof(ContentControl)), value.Content))
        {
            writer.WriteMember(value, value.Content, "Content");
        }
        if (!object.Equals(ContentControl.ContentTemplateProperty.GetDefaultValue(typeof(ContentControl)), value.ContentTemplate))
        {
            writer.WriteMember(value, value.ContentTemplate, "ContentTemplate");
        }
         writer.WriteMember(value, value.Presenter, "Presenter");
        if (!object.Equals(ContentControl.HorizontalContentAlignmentProperty.GetDefaultValue(typeof(ContentControl)), value.HorizontalContentAlignment))
        {
            writer.WriteMember(value, value.HorizontalContentAlignment, "HorizontalContentAlignment");
        }
        if (!object.Equals(ContentControl.VerticalContentAlignmentProperty.GetDefaultValue(typeof(ContentControl)), value.VerticalContentAlignment))
        {
            writer.WriteMember(value, value.VerticalContentAlignment, "VerticalContentAlignment");
        }
    }

    public static bool MemberHasValue(ContentControl target, string member, object? value)
    {
        if (member == "Content")
        {
            return object.Equals(target.Content, value);
        }
        if (member == "ContentTemplate")
        {
            return object.Equals(target.ContentTemplate, value);
        }
        if (member == "Presenter")
        {
            return object.Equals(target.Presenter, value);
        }
        if (member == "HorizontalContentAlignment")
        {
            return object.Equals(target.HorizontalContentAlignment, value);
        }
        if (member == "VerticalContentAlignment")
        {
            return object.Equals(target.VerticalContentAlignment, value);
        }
        TemplatedControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

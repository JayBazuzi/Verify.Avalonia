// <auto-generated />
#nullable enable
class PanelConverter :
    WriteOnlyJsonConverter<Panel>
{
    public override void Write(VerifyJsonWriter writer, Panel value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Panel value)
    {
         writer.WriteMember(value, value.Children, "Children");
        if (!object.Equals(Panel.BackgroundProperty.GetDefaultValue(typeof(Panel)), value.Background))
        {
            writer.WriteMember(value, value.Background, "Background");
        }
         writer.WriteMember(value, value.IsItemsHost, "IsItemsHost");
    }

    public static bool MemberHasValue(Panel target, string member, object? value)
    {
        if (member == "Children")
        {
            return object.Equals(target.Children, value);
        }
        if (member == "Background")
        {
            return object.Equals(target.Background, value);
        }
        if (member == "IsItemsHost")
        {
            return object.Equals(target.IsItemsHost, value);
        }
        ControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

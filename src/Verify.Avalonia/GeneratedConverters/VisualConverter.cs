// <auto-generated />
class VisualConverter :
    WriteOnlyJsonConverter<Visual>
{
    public override void Write(VerifyJsonWriter writer, Visual value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Visual value)
    {
        if (!object.Equals(Visual.BoundsProperty.GetUnsetValue(typeof(Visual)), value.Bounds))
        {
            writer.WriteMember(value, value.Bounds, "Bounds");
        }
        if (!object.Equals(Visual.ClipToBoundsProperty.GetDefaultValue(typeof(Visual)), value.ClipToBounds))
        {
            writer.WriteMember(value, value.ClipToBounds, "ClipToBounds");
        }
        if (!object.Equals(Visual.ClipProperty.GetDefaultValue(typeof(Visual)), value.Clip))
        {
            writer.WriteMember(value, value.Clip, "Clip");
        }
         writer.WriteMember(value, value.IsEffectivelyVisible, "IsEffectivelyVisible");
        if (!object.Equals(Visual.IsVisibleProperty.GetDefaultValue(typeof(Visual)), value.IsVisible))
        {
            writer.WriteMember(value, value.IsVisible, "IsVisible");
        }
        if (!object.Equals(Visual.OpacityProperty.GetDefaultValue(typeof(Visual)), value.Opacity))
        {
            writer.WriteMember(value, value.Opacity, "Opacity");
        }
        if (!object.Equals(Visual.OpacityMaskProperty.GetDefaultValue(typeof(Visual)), value.OpacityMask))
        {
            writer.WriteMember(value, value.OpacityMask, "OpacityMask");
        }
        if (!object.Equals(Visual.EffectProperty.GetDefaultValue(typeof(Visual)), value.Effect))
        {
            writer.WriteMember(value, value.Effect, "Effect");
        }
        if (!object.Equals(Visual.HasMirrorTransformProperty.GetUnsetValue(typeof(Visual)), value.HasMirrorTransform))
        {
            writer.WriteMember(value, value.HasMirrorTransform, "HasMirrorTransform");
        }
        if (!object.Equals(Visual.RenderTransformProperty.GetDefaultValue(typeof(Visual)), value.RenderTransform))
        {
            writer.WriteMember(value, value.RenderTransform, "RenderTransform");
        }
        if (!object.Equals(Visual.RenderTransformOriginProperty.GetDefaultValue(typeof(Visual)), value.RenderTransformOrigin))
        {
            writer.WriteMember(value, value.RenderTransformOrigin, "RenderTransformOrigin");
        }
        if (!object.Equals(Visual.FlowDirectionProperty.GetDefaultValue(typeof(Visual)), value.FlowDirection))
        {
            writer.WriteMember(value, value.FlowDirection, "FlowDirection");
        }
        if (!object.Equals(Visual.ZIndexProperty.GetDefaultValue(typeof(Visual)), value.ZIndex))
        {
            writer.WriteMember(value, value.ZIndex, "ZIndex");
        }
    }
}

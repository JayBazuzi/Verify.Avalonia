// <auto-generated />
#nullable enable
class DataGridRowGroupHeaderConverter :
    WriteOnlyJsonConverter<DataGridRowGroupHeader>
{
    public override void Write(VerifyJsonWriter writer, DataGridRowGroupHeader value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, DataGridRowGroupHeader value)
    {
        var type = typeof(DataGridRowGroupHeader);
        if (value.ShouldIncludeProperty(DataGridRowGroupHeader.IsItemCountVisibleProperty))
        if (!object.Equals(DataGridRowGroupHeader.IsItemCountVisibleProperty.GetDefaultValue(type), value.IsItemCountVisible))
        {
            writer.WriteMember(value, value.IsItemCountVisible, "IsItemCountVisible");
        }
        if (value.ShouldIncludeProperty(DataGridRowGroupHeader.PropertyNameProperty))
        if (!object.Equals(DataGridRowGroupHeader.PropertyNameProperty.GetDefaultValue(type), value.PropertyName))
        {
            writer.WriteMember(value, value.PropertyName, "PropertyName");
        }
        if (value.ShouldIncludeProperty(DataGridRowGroupHeader.IsPropertyNameVisibleProperty))
        if (!object.Equals(DataGridRowGroupHeader.IsPropertyNameVisibleProperty.GetDefaultValue(type), value.IsPropertyNameVisible))
        {
            writer.WriteMember(value, value.IsPropertyNameVisible, "IsPropertyNameVisible");
        }
        if (value.ShouldIncludeProperty(DataGridRowGroupHeader.SublevelIndentProperty))
        if (!object.Equals(DataGridRowGroupHeader.SublevelIndentProperty.GetDefaultValue(type), value.SublevelIndent))
        {
            writer.WriteMember(value, value.SublevelIndent, "SublevelIndent");
        }
    }
}

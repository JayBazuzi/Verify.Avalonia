// <auto-generated />
#nullable enable
class GridConverter :
    WriteOnlyJsonConverter<Grid>
{
    public override void Write(VerifyJsonWriter writer, Grid value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        PanelConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Grid value)
    {
        if (!object.Equals(Grid.ShowGridLinesProperty.GetDefaultValue(typeof(Grid)), value.ShowGridLines))
        {
            writer.WriteMember(value, value.ShowGridLines, "ShowGridLines");
        }
         writer.WriteMember(value, value.ColumnDefinitions, "ColumnDefinitions");
         writer.WriteMember(value, value.RowDefinitions, "RowDefinitions");
    }

    public static bool MemberHasValue(Grid target, string member, object? value)
    {
        if (member == "ShowGridLines")
        {
            return object.Equals(target.ShowGridLines, value);
        }
        if (member == "ColumnDefinitions")
        {
            return object.Equals(target.ColumnDefinitions, value);
        }
        if (member == "RowDefinitions")
        {
            return object.Equals(target.RowDefinitions, value);
        }
        PanelConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
#nullable enable
class ListBoxConverter :
    WriteOnlyJsonConverter<ListBox>,
    IAvaloniaConverter<ListBox>
{
    public override void Write(VerifyJsonWriter writer, ListBox value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        SelectingItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ListBox value)
    {
        if (value.ShouldIncludeProperty(ListBox.ScrollProperty))
        if (!object.Equals(ListBox.ScrollProperty.GetUnsetValue(typeof(ListBox)), value.Scroll))
        {
            writer.WriteMember(value, value.Scroll, "Scroll");
        }
        if (value.ShouldIncludeProperty(ListBox.SelectedItemsProperty))
        if (!object.Equals(ListBox.SelectedItemsProperty.GetUnsetValue(typeof(ListBox)), value.SelectedItems))
        {
            writer.WriteMember(value, value.SelectedItems, "SelectedItems");
        }
        if (value.ShouldIncludeProperty(ListBox.SelectionProperty))
        if (!object.Equals(ListBox.SelectionProperty.GetUnsetValue(typeof(ListBox)), value.Selection))
        {
            writer.WriteMember(value, value.Selection, "Selection");
        }
        if (value.ShouldIncludeProperty(ListBox.SelectionModeProperty))
        if (!object.Equals(ListBox.SelectionModeProperty.GetDefaultValue(typeof(ListBox)), value.SelectionMode))
        {
            writer.WriteMember(value, value.SelectionMode, "SelectionMode");
        }
    }

    public static bool MemberHasValue(ListBox target, string member, object? value)
    {
        if (member == "Scroll")
        {
            return object.Equals(target.Scroll, value);
        }
        if (member == "SelectedItems")
        {
            return object.Equals(target.SelectedItems, value);
        }
        if (member == "Selection")
        {
            return object.Equals(target.Selection, value);
        }
        if (member == "SelectionMode")
        {
            return object.Equals(target.SelectionMode, value);
        }
        SelectingItemsControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

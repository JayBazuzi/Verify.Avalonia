// <auto-generated />
#nullable enable
class MenuItemConverter :
    WriteOnlyJsonConverter<MenuItem>
{
    public override void Write(VerifyJsonWriter writer, MenuItem value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        HeaderedSelectingItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, MenuItem value)
    {
        if (MenuItem.CommandProperty.ShouldIncludeProperty(value, value.Command))
        {
            writer.WriteMember(value, value.Command, "Command");
        }
        if (MenuItem.HotKeyProperty.ShouldIncludeProperty(value, value.HotKey))
        {
            writer.WriteMember(value, value.HotKey, "HotKey");
        }
        if (MenuItem.CommandParameterProperty.ShouldIncludeProperty(value, value.CommandParameter))
        {
            writer.WriteMember(value, value.CommandParameter, "CommandParameter");
        }
        if (MenuItem.IconProperty.ShouldIncludeProperty(value, value.Icon))
        {
            writer.WriteMember(value, value.Icon, "Icon");
        }
        if (MenuItem.InputGestureProperty.ShouldIncludeProperty(value, value.InputGesture))
        {
            writer.WriteMember(value, value.InputGesture, "InputGesture");
        }
        writer.WriteMember(value, value.IsSelected, "IsSelected");
        if (MenuItem.IsSubMenuOpenProperty.ShouldIncludeProperty(value, value.IsSubMenuOpen))
        {
            writer.WriteMember(value, value.IsSubMenuOpen, "IsSubMenuOpen");
        }
        if (MenuItem.StaysOpenOnClickProperty.ShouldIncludeProperty(value, value.StaysOpenOnClick))
        {
            writer.WriteMember(value, value.StaysOpenOnClick, "StaysOpenOnClick");
        }
        writer.WriteMember(value, value.HasSubMenu, "HasSubMenu");
        writer.WriteMember(value, value.IsTopLevel, "IsTopLevel");
    }
}

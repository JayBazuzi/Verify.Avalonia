// <auto-generated />
class MenuItemConverter :
    WriteOnlyJsonConverter<MenuItem>
{
    public override void Write(VerifyJsonWriter writer, MenuItem value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        HeaderedSelectingItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, MenuItem value)
    {
         if (MenuItem.CommandProperty.GetDefaultValue(typeof(MenuItem)) != value.Command)
         {
             writer.WriteMember(value, value.Command, "Command");
         }
         if (MenuItem.HotKeyProperty.GetDefaultValue(typeof(MenuItem)) != value.HotKey)
         {
             writer.WriteMember(value, value.HotKey, "HotKey");
         }
         if (MenuItem.CommandParameterProperty.GetDefaultValue(typeof(MenuItem)) != value.CommandParameter)
         {
             writer.WriteMember(value, value.CommandParameter, "CommandParameter");
         }
         if (MenuItem.IconProperty.GetDefaultValue(typeof(MenuItem)) != value.Icon)
         {
             writer.WriteMember(value, value.Icon, "Icon");
         }
         if (MenuItem.InputGestureProperty.GetDefaultValue(typeof(MenuItem)) != value.InputGesture)
         {
             writer.WriteMember(value, value.InputGesture, "InputGesture");
         }
         writer.WriteMember(value, value.IsSelected, "IsSelected");
         if (!MenuItem.IsSubMenuOpenProperty.GetDefaultValue(typeof(MenuItem)).Equals(value.IsSubMenuOpen))
         {
             writer.WriteMember(value, value.IsSubMenuOpen, "IsSubMenuOpen");
         }
         if (!MenuItem.StaysOpenOnClickProperty.GetDefaultValue(typeof(MenuItem)).Equals(value.StaysOpenOnClick))
         {
             writer.WriteMember(value, value.StaysOpenOnClick, "StaysOpenOnClick");
         }
         writer.WriteMember(value, value.HasSubMenu, "HasSubMenu");
         writer.WriteMember(value, value.IsTopLevel, "IsTopLevel");
    }
}

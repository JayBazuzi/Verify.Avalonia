// <auto-generated />
#nullable enable
class ColorPreviewerConverter :
    WriteOnlyJsonConverter<ColorPreviewer>
{
    public override void Write(VerifyJsonWriter writer, ColorPreviewer value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ColorPreviewer value)
    {
        if (!object.Equals(ColorPreviewer.HsvColorProperty.GetDefaultValue(typeof(ColorPreviewer)), value.HsvColor))
        {
            writer.WriteMember(value, value.HsvColor, "HsvColor");
        }
        if (!object.Equals(ColorPreviewer.IsAccentColorsVisibleProperty.GetDefaultValue(typeof(ColorPreviewer)), value.IsAccentColorsVisible))
        {
            writer.WriteMember(value, value.IsAccentColorsVisible, "IsAccentColorsVisible");
        }
    }

    public static bool MemberHasValue(ColorPreviewer target, string member, object? value)
    {
        if (member == "HsvColor")
        {
            return object.Equals(target.HsvColor, value);
        }
        if (member == "IsAccentColorsVisible")
        {
            return object.Equals(target.IsAccentColorsVisible, value);
        }
        TemplatedControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

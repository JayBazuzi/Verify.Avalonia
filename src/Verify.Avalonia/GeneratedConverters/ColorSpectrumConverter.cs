// <auto-generated />
#nullable enable
class ColorSpectrumConverter :
    WriteOnlyJsonConverter<ColorSpectrum>
{
    public override void Write(VerifyJsonWriter writer, ColorSpectrum value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ColorSpectrum value)
    {
        var type = typeof(ColorSpectrum);
        if (ColorSpectrum.ColorProperty.ShouldIncludeProperty(value, value.Color))
        {
            writer.WriteMember(value, value.Color, "Color");
        }
        if (ColorSpectrum.ComponentsProperty.ShouldIncludeProperty(value, value.Components))
        {
            writer.WriteMember(value, value.Components, "Components");
        }
        if (ColorSpectrum.HsvColorProperty.ShouldIncludeProperty(value, value.HsvColor))
        {
            writer.WriteMember(value, value.HsvColor, "HsvColor");
        }
        if (ColorSpectrum.MaxHueProperty.ShouldIncludeProperty(value, value.MaxHue))
        {
            writer.WriteMember(value, value.MaxHue, "MaxHue");
        }
        if (ColorSpectrum.MaxSaturationProperty.ShouldIncludeProperty(value, value.MaxSaturation))
        {
            writer.WriteMember(value, value.MaxSaturation, "MaxSaturation");
        }
        if (ColorSpectrum.MaxValueProperty.ShouldIncludeProperty(value, value.MaxValue))
        {
            writer.WriteMember(value, value.MaxValue, "MaxValue");
        }
        if (ColorSpectrum.MinHueProperty.ShouldIncludeProperty(value, value.MinHue))
        {
            writer.WriteMember(value, value.MinHue, "MinHue");
        }
        if (ColorSpectrum.MinSaturationProperty.ShouldIncludeProperty(value, value.MinSaturation))
        {
            writer.WriteMember(value, value.MinSaturation, "MinSaturation");
        }
        if (ColorSpectrum.MinValueProperty.ShouldIncludeProperty(value, value.MinValue))
        {
            writer.WriteMember(value, value.MinValue, "MinValue");
        }
        if (ColorSpectrum.ShapeProperty.ShouldIncludeProperty(value, value.Shape))
        {
            writer.WriteMember(value, value.Shape, "Shape");
        }
        if (ColorSpectrum.ThirdComponentProperty.ShouldIncludeProperty(value, value.ThirdComponent))
        {
            writer.WriteMember(value, value.ThirdComponent, "ThirdComponent");
        }
    }
}

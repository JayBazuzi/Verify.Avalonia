// <auto-generated />
#nullable enable
class ScrollContentPresenterConverter :
    WriteOnlyJsonConverter<ScrollContentPresenter>
{
    public override void Write(VerifyJsonWriter writer, ScrollContentPresenter value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentPresenterConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ScrollContentPresenter value)
    {
        if (!object.Equals(ScrollContentPresenter.CanHorizontallyScrollProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.CanHorizontallyScroll))
        {
            writer.WriteMember(value, value.CanHorizontallyScroll, "CanHorizontallyScroll");
        }
        if (!object.Equals(ScrollContentPresenter.CanVerticallyScrollProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.CanVerticallyScroll))
        {
            writer.WriteMember(value, value.CanVerticallyScroll, "CanVerticallyScroll");
        }
        if (!object.Equals(ScrollContentPresenter.ExtentProperty.GetUnsetValue(typeof(ScrollContentPresenter)), value.Extent))
        {
            writer.WriteMember(value, value.Extent, "Extent");
        }
        if (!object.Equals(ScrollContentPresenter.OffsetProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.Offset))
        {
            writer.WriteMember(value, value.Offset, "Offset");
        }
        if (!object.Equals(ScrollContentPresenter.ViewportProperty.GetUnsetValue(typeof(ScrollContentPresenter)), value.Viewport))
        {
            writer.WriteMember(value, value.Viewport, "Viewport");
        }
        if (!object.Equals(ScrollContentPresenter.HorizontalSnapPointsTypeProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.HorizontalSnapPointsType))
        {
            writer.WriteMember(value, value.HorizontalSnapPointsType, "HorizontalSnapPointsType");
        }
        if (!object.Equals(ScrollContentPresenter.VerticalSnapPointsTypeProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.VerticalSnapPointsType))
        {
            writer.WriteMember(value, value.VerticalSnapPointsType, "VerticalSnapPointsType");
        }
        if (!object.Equals(ScrollContentPresenter.HorizontalSnapPointsAlignmentProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.HorizontalSnapPointsAlignment))
        {
            writer.WriteMember(value, value.HorizontalSnapPointsAlignment, "HorizontalSnapPointsAlignment");
        }
        if (!object.Equals(ScrollContentPresenter.VerticalSnapPointsAlignmentProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.VerticalSnapPointsAlignment))
        {
            writer.WriteMember(value, value.VerticalSnapPointsAlignment, "VerticalSnapPointsAlignment");
        }
        if (!object.Equals(ScrollContentPresenter.IsScrollChainingEnabledProperty.GetDefaultValue(typeof(ScrollContentPresenter)), value.IsScrollChainingEnabled))
        {
            writer.WriteMember(value, value.IsScrollChainingEnabled, "IsScrollChainingEnabled");
        }
    }

    public static bool MemberHasValue(ScrollContentPresenter target, string member, object? value)
    {
        if (member == "CanHorizontallyScroll")
        {
            return object.Equals(target.CanHorizontallyScroll, value);
        }
        if (member == "CanVerticallyScroll")
        {
            return object.Equals(target.CanVerticallyScroll, value);
        }
        if (member == "Extent")
        {
            return object.Equals(target.Extent, value);
        }
        if (member == "Offset")
        {
            return object.Equals(target.Offset, value);
        }
        if (member == "Viewport")
        {
            return object.Equals(target.Viewport, value);
        }
        if (member == "HorizontalSnapPointsType")
        {
            return object.Equals(target.HorizontalSnapPointsType, value);
        }
        if (member == "VerticalSnapPointsType")
        {
            return object.Equals(target.VerticalSnapPointsType, value);
        }
        if (member == "HorizontalSnapPointsAlignment")
        {
            return object.Equals(target.HorizontalSnapPointsAlignment, value);
        }
        if (member == "VerticalSnapPointsAlignment")
        {
            return object.Equals(target.VerticalSnapPointsAlignment, value);
        }
        if (member == "IsScrollChainingEnabled")
        {
            return object.Equals(target.IsScrollChainingEnabled, value);
        }
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
#nullable enable
class SectorConverter :
    WriteOnlyJsonConverter<Sector>
{
    public override void Write(VerifyJsonWriter writer, Sector value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ShapeConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Sector value)
    {
        var type = typeof(Sector);
        if (value.ShouldIncludeProperty(Sector.StartAngleProperty))
        if (!object.Equals(Sector.StartAngleProperty.GetDefaultValue(type), value.StartAngle))
        {
            writer.WriteMember(value, value.StartAngle, "StartAngle");
        }
        if (value.ShouldIncludeProperty(Sector.SweepAngleProperty))
        if (!object.Equals(Sector.SweepAngleProperty.GetDefaultValue(type), value.SweepAngle))
        {
            writer.WriteMember(value, value.SweepAngle, "SweepAngle");
        }
    }
}

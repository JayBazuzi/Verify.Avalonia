// <auto-generated />
#nullable enable
class ButtonConverter :
    WriteOnlyJsonConverter<Button>
{
    public override void Write(VerifyJsonWriter writer, Button value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Button value)
    {
        var type = typeof(Button);
        if (Button.ClickModeProperty.ShouldIncludeProperty(value, value.ClickMode))
        {
            writer.WriteMember(value, value.ClickMode, "ClickMode");
        }
        if (Button.CommandProperty.ShouldIncludeProperty(value, value.Command))
        {
            writer.WriteMember(value, value.Command, "Command");
        }
        if (Button.HotKeyProperty.ShouldIncludeProperty(value, value.HotKey))
        {
            writer.WriteMember(value, value.HotKey, "HotKey");
        }
        if (Button.CommandParameterProperty.ShouldIncludeProperty(value, value.CommandParameter))
        {
            writer.WriteMember(value, value.CommandParameter, "CommandParameter");
        }
        if (Button.IsDefaultProperty.ShouldIncludeProperty(value, value.IsDefault))
        {
            writer.WriteMember(value, value.IsDefault, "IsDefault");
        }
        if (Button.IsCancelProperty.ShouldIncludeProperty(value, value.IsCancel))
        {
            writer.WriteMember(value, value.IsCancel, "IsCancel");
        }
        if (Button.IsPressedProperty.ShouldIncludeProperty(value, value.IsPressed))
        {
            writer.WriteMember(value, value.IsPressed, "IsPressed");
        }
        if (Button.FlyoutProperty.ShouldIncludeProperty(value, value.Flyout))
        {
            writer.WriteMember(value, value.Flyout, "Flyout");
        }
    }
}

// <auto-generated />
#nullable enable
class ButtonConverter :
    WriteOnlyJsonConverter<Button>,
    IAvaloniaConverter<Button>
{
    public override void Write(VerifyJsonWriter writer, Button value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ContentControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Button value)
    {
        if (!object.Equals(Button.ClickModeProperty.GetDefaultValue(typeof(Button)), value.ClickMode))
        {
            writer.WriteMember(value, value.ClickMode, "ClickMode");
        }
        if (!object.Equals(Button.CommandProperty.GetDefaultValue(typeof(Button)), value.Command))
        {
            writer.WriteMember(value, value.Command, "Command");
        }
        if (!object.Equals(Button.HotKeyProperty.GetDefaultValue(typeof(Button)), value.HotKey))
        {
            writer.WriteMember(value, value.HotKey, "HotKey");
        }
        if (!object.Equals(Button.CommandParameterProperty.GetDefaultValue(typeof(Button)), value.CommandParameter))
        {
            writer.WriteMember(value, value.CommandParameter, "CommandParameter");
        }
        if (!object.Equals(Button.IsDefaultProperty.GetDefaultValue(typeof(Button)), value.IsDefault))
        {
            writer.WriteMember(value, value.IsDefault, "IsDefault");
        }
        if (!object.Equals(Button.IsCancelProperty.GetDefaultValue(typeof(Button)), value.IsCancel))
        {
            writer.WriteMember(value, value.IsCancel, "IsCancel");
        }
        if (!object.Equals(Button.IsPressedProperty.GetUnsetValue(typeof(Button)), value.IsPressed))
        {
            writer.WriteMember(value, value.IsPressed, "IsPressed");
        }
        if (!object.Equals(Button.FlyoutProperty.GetDefaultValue(typeof(Button)), value.Flyout))
        {
            writer.WriteMember(value, value.Flyout, "Flyout");
        }
    }

    public static bool MemberHasValue(Button target, string member, object? value)
    {
        if (member == "ClickMode")
        {
            return object.Equals(target.ClickMode, value);
        }
        if (member == "Command")
        {
            return object.Equals(target.Command, value);
        }
        if (member == "HotKey")
        {
            return object.Equals(target.HotKey, value);
        }
        if (member == "CommandParameter")
        {
            return object.Equals(target.CommandParameter, value);
        }
        if (member == "IsDefault")
        {
            return object.Equals(target.IsDefault, value);
        }
        if (member == "IsCancel")
        {
            return object.Equals(target.IsCancel, value);
        }
        if (member == "IsPressed")
        {
            return object.Equals(target.IsPressed, value);
        }
        if (member == "Flyout")
        {
            return object.Equals(target.Flyout, value);
        }
        ContentControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

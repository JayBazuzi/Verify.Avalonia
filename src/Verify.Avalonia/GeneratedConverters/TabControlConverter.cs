// <auto-generated />
#nullable enable
class TabControlConverter :
    WriteOnlyJsonConverter<TabControl>,
    IAvaloniaConverter<TabControl>
{
    public override void Write(VerifyJsonWriter writer, TabControl value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        SelectingItemsControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, TabControl value)
    {
        if (value.ShouldIncludeProperty(TabControl.HorizontalContentAlignmentProperty))
        if (!object.Equals(TabControl.HorizontalContentAlignmentProperty.GetDefaultValue(typeof(TabControl)), value.HorizontalContentAlignment))
        {
            writer.WriteMember(value, value.HorizontalContentAlignment, "HorizontalContentAlignment");
        }
        if (value.ShouldIncludeProperty(TabControl.VerticalContentAlignmentProperty))
        if (!object.Equals(TabControl.VerticalContentAlignmentProperty.GetDefaultValue(typeof(TabControl)), value.VerticalContentAlignment))
        {
            writer.WriteMember(value, value.VerticalContentAlignment, "VerticalContentAlignment");
        }
        if (value.ShouldIncludeProperty(TabControl.TabStripPlacementProperty))
        if (!object.Equals(TabControl.TabStripPlacementProperty.GetDefaultValue(typeof(TabControl)), value.TabStripPlacement))
        {
            writer.WriteMember(value, value.TabStripPlacement, "TabStripPlacement");
        }
        if (value.ShouldIncludeProperty(TabControl.ContentTemplateProperty))
        if (!object.Equals(TabControl.ContentTemplateProperty.GetDefaultValue(typeof(TabControl)), value.ContentTemplate))
        {
            writer.WriteMember(value, value.ContentTemplate, "ContentTemplate");
        }
        if (value.ShouldIncludeProperty(TabControl.SelectedContentProperty))
        if (!object.Equals(TabControl.SelectedContentProperty.GetUnsetValue(typeof(TabControl)), value.SelectedContent))
        {
            writer.WriteMember(value, value.SelectedContent, "SelectedContent");
        }
        if (value.ShouldIncludeProperty(TabControl.SelectedContentTemplateProperty))
        if (!object.Equals(TabControl.SelectedContentTemplateProperty.GetUnsetValue(typeof(TabControl)), value.SelectedContentTemplate))
        {
            writer.WriteMember(value, value.SelectedContentTemplate, "SelectedContentTemplate");
        }
    }

    public static bool MemberHasValue(TabControl target, string member, object? value)
    {
        if (member == "HorizontalContentAlignment")
        {
            return object.Equals(target.HorizontalContentAlignment, value);
        }
        if (member == "VerticalContentAlignment")
        {
            return object.Equals(target.VerticalContentAlignment, value);
        }
        if (member == "TabStripPlacement")
        {
            return object.Equals(target.TabStripPlacement, value);
        }
        if (member == "ContentTemplate")
        {
            return object.Equals(target.ContentTemplate, value);
        }
        if (member == "SelectedContent")
        {
            return object.Equals(target.SelectedContent, value);
        }
        if (member == "SelectedContentTemplate")
        {
            return object.Equals(target.SelectedContentTemplate, value);
        }
        SelectingItemsControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

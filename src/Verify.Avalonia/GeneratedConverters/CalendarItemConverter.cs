// <auto-generated />
#nullable enable
class CalendarItemConverter :
    WriteOnlyJsonConverter<CalendarItem>,
    IAvaloniaConverter<CalendarItem>
{
    public override void Write(VerifyJsonWriter writer, CalendarItem value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, CalendarItem value)
    {
        if (!object.Equals(CalendarItem.HeaderBackgroundProperty.GetDefaultValue(typeof(CalendarItem)), value.HeaderBackground))
        {
            writer.WriteMember(value, value.HeaderBackground, "HeaderBackground");
        }
        if (!object.Equals(CalendarItem.DayTitleTemplateProperty.GetDefaultValue(typeof(CalendarItem)), value.DayTitleTemplate))
        {
            writer.WriteMember(value, value.DayTitleTemplate, "DayTitleTemplate");
        }
    }

    public static bool MemberHasValue(CalendarItem target, string member, object? value)
    {
        if (member == "HeaderBackground")
        {
            return object.Equals(target.HeaderBackground, value);
        }
        if (member == "DayTitleTemplate")
        {
            return object.Equals(target.DayTitleTemplate, value);
        }
        TemplatedControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

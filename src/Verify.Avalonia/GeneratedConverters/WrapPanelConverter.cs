// <auto-generated />
#nullable enable
class WrapPanelConverter :
    WriteOnlyJsonConverter<WrapPanel>,
    IAvaloniaConverter<WrapPanel>
{
    public override void Write(VerifyJsonWriter writer, WrapPanel value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        PanelConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, WrapPanel value)
    {
        if (!object.Equals(WrapPanel.OrientationProperty.GetDefaultValue(typeof(WrapPanel)), value.Orientation))
        {
            writer.WriteMember(value, value.Orientation, "Orientation");
        }
        if (!object.Equals(WrapPanel.ItemWidthProperty.GetDefaultValue(typeof(WrapPanel)), value.ItemWidth))
        {
            writer.WriteMember(value, value.ItemWidth, "ItemWidth");
        }
        if (!object.Equals(WrapPanel.ItemHeightProperty.GetDefaultValue(typeof(WrapPanel)), value.ItemHeight))
        {
            writer.WriteMember(value, value.ItemHeight, "ItemHeight");
        }
    }

    public static bool MemberHasValue(WrapPanel target, string member, object? value)
    {
        if (member == "Orientation")
        {
            return object.Equals(target.Orientation, value);
        }
        if (member == "ItemWidth")
        {
            return object.Equals(target.ItemWidth, value);
        }
        if (member == "ItemHeight")
        {
            return object.Equals(target.ItemHeight, value);
        }
        PanelConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

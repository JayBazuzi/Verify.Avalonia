// <auto-generated />
class ControlConverter :
    WriteOnlyJsonConverter<Control>
{
    public override void Write(VerifyJsonWriter writer, Control value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        InputElementConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Control value)
    {
        if (Control.FocusAdornerProperty.GetDefaultValue(typeof(Control)) != value.FocusAdorner)
        {
            writer.WriteMember(value, value.FocusAdorner, "FocusAdorner");
        }
         writer.WriteMember(value, value.DataTemplates, "DataTemplates");
        if (Control.ContextMenuProperty.GetDefaultValue(typeof(Control)) != value.ContextMenu)
        {
            writer.WriteMember(value, value.ContextMenu, "ContextMenu");
        }
        if (Control.ContextFlyoutProperty.GetDefaultValue(typeof(Control)) != value.ContextFlyout)
        {
            writer.WriteMember(value, value.ContextFlyout, "ContextFlyout");
        }
         writer.WriteMember(value, value.IsLoaded, "IsLoaded");
        if (Control.TagProperty.GetDefaultValue(typeof(Control)) != value.Tag)
        {
            writer.WriteMember(value, value.Tag, "Tag");
        }
    }
}

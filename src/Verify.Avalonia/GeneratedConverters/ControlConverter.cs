// <auto-generated />
#nullable enable
class ControlConverter :
    WriteOnlyJsonConverter<Control>
{
    public override void Write(VerifyJsonWriter writer, Control value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        InputElementConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Control value)
    {
        var type = typeof(Control);
        if (value.ShouldIncludeProperty(Control.FocusAdornerProperty))
        if (!object.Equals(Control.FocusAdornerProperty.GetDefaultValue(type), value.FocusAdorner))
        {
            writer.WriteMember(value, value.FocusAdorner, "FocusAdorner");
        }
        writer.WriteMember(value, value.DataTemplates, "DataTemplates");
        if (value.ShouldIncludeProperty(Control.ContextMenuProperty))
        if (!object.Equals(Control.ContextMenuProperty.GetDefaultValue(type), value.ContextMenu))
        {
            writer.WriteMember(value, value.ContextMenu, "ContextMenu");
        }
        if (value.ShouldIncludeProperty(Control.ContextFlyoutProperty))
        if (!object.Equals(Control.ContextFlyoutProperty.GetDefaultValue(type), value.ContextFlyout))
        {
            writer.WriteMember(value, value.ContextFlyout, "ContextFlyout");
        }
        writer.WriteMember(value, value.IsLoaded, "IsLoaded");
        if (value.ShouldIncludeProperty(Control.TagProperty))
        if (!object.Equals(Control.TagProperty.GetDefaultValue(type), value.Tag))
        {
            writer.WriteMember(value, value.Tag, "Tag");
        }
    }
}

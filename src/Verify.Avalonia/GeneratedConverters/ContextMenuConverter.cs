// <auto-generated />
#nullable enable
class ContextMenuConverter :
    WriteOnlyJsonConverter<ContextMenu>
{
    public override void Write(VerifyJsonWriter writer, ContextMenu value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        MenuBaseConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ContextMenu value)
    {
        var type = typeof(ContextMenu);
        if (value.ShouldIncludeProperty(ContextMenu.HorizontalOffsetProperty))
        if (!object.Equals(ContextMenu.HorizontalOffsetProperty.GetDefaultValue(type), value.HorizontalOffset))
        {
            writer.WriteMember(value, value.HorizontalOffset, "HorizontalOffset");
        }
        if (value.ShouldIncludeProperty(ContextMenu.VerticalOffsetProperty))
        if (!object.Equals(ContextMenu.VerticalOffsetProperty.GetDefaultValue(type), value.VerticalOffset))
        {
            writer.WriteMember(value, value.VerticalOffset, "VerticalOffset");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementAnchorProperty))
        if (!object.Equals(ContextMenu.PlacementAnchorProperty.GetDefaultValue(type), value.PlacementAnchor))
        {
            writer.WriteMember(value, value.PlacementAnchor, "PlacementAnchor");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementConstraintAdjustmentProperty))
        if (!object.Equals(ContextMenu.PlacementConstraintAdjustmentProperty.GetDefaultValue(type), value.PlacementConstraintAdjustment))
        {
            writer.WriteMember(value, value.PlacementConstraintAdjustment, "PlacementConstraintAdjustment");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementGravityProperty))
        if (!object.Equals(ContextMenu.PlacementGravityProperty.GetDefaultValue(type), value.PlacementGravity))
        {
            writer.WriteMember(value, value.PlacementGravity, "PlacementGravity");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementProperty))
        if (!object.Equals(ContextMenu.PlacementProperty.GetDefaultValue(type), value.Placement))
        {
            writer.WriteMember(value, value.Placement, "Placement");
        }
        if (value.ShouldIncludeProperty(ContextMenu.WindowManagerAddShadowHintProperty))
        if (!object.Equals(ContextMenu.WindowManagerAddShadowHintProperty.GetDefaultValue(type), value.WindowManagerAddShadowHint))
        {
            writer.WriteMember(value, value.WindowManagerAddShadowHint, "WindowManagerAddShadowHint");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementRectProperty))
        if (!object.Equals(ContextMenu.PlacementRectProperty.GetDefaultValue(type), value.PlacementRect))
        {
            writer.WriteMember(value, value.PlacementRect, "PlacementRect");
        }
        if (value.ShouldIncludeProperty(ContextMenu.PlacementTargetProperty))
        if (!object.Equals(ContextMenu.PlacementTargetProperty.GetDefaultValue(type), value.PlacementTarget))
        {
            writer.WriteMember(value, value.PlacementTarget, "PlacementTarget");
        }
    }
}

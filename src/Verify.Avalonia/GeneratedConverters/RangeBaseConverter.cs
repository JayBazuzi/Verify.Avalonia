// <auto-generated />
#nullable enable
class RangeBaseConverter :
    WriteOnlyJsonConverter<RangeBase>
{
    public override void Write(VerifyJsonWriter writer, RangeBase value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, RangeBase value)
    {
        if (value.ShouldIncludeProperty(RangeBase.MinimumProperty))
        if (!object.Equals(RangeBase.MinimumProperty.GetDefaultValue(typeof(RangeBase)), value.Minimum))
        {
            writer.WriteMember(value, value.Minimum, "Minimum");
        }
        if (value.ShouldIncludeProperty(RangeBase.MaximumProperty))
        if (!object.Equals(RangeBase.MaximumProperty.GetDefaultValue(typeof(RangeBase)), value.Maximum))
        {
            writer.WriteMember(value, value.Maximum, "Maximum");
        }
        if (value.ShouldIncludeProperty(RangeBase.ValueProperty))
        if (!object.Equals(RangeBase.ValueProperty.GetDefaultValue(typeof(RangeBase)), value.Value))
        {
            writer.WriteMember(value, value.Value, "Value");
        }
        if (value.ShouldIncludeProperty(RangeBase.SmallChangeProperty))
        if (!object.Equals(RangeBase.SmallChangeProperty.GetDefaultValue(typeof(RangeBase)), value.SmallChange))
        {
            writer.WriteMember(value, value.SmallChange, "SmallChange");
        }
        if (value.ShouldIncludeProperty(RangeBase.LargeChangeProperty))
        if (!object.Equals(RangeBase.LargeChangeProperty.GetDefaultValue(typeof(RangeBase)), value.LargeChange))
        {
            writer.WriteMember(value, value.LargeChange, "LargeChange");
        }
    }
}

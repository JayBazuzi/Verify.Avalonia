// <auto-generated />
#nullable enable
class PathIconConverter :
    WriteOnlyJsonConverter<PathIcon>,
    IAvaloniaConverter<PathIcon>
{
    public override void Write(VerifyJsonWriter writer, PathIcon value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        IconElementConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, PathIcon value)
    {
        if (!object.Equals(PathIcon.DataProperty.GetDefaultValue(typeof(PathIcon)), value.Data))
        {
            writer.WriteMember(value, value.Data, "Data");
        }
    }

    public static bool MemberHasValue(PathIcon target, string member, object? value)
    {
        if (member == "Data")
        {
            return object.Equals(target.Data, value);
        }
        IconElementConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

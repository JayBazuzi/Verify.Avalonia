// <auto-generated />
#nullable enable
class ToggleSwitchConverter :
    WriteOnlyJsonConverter<ToggleSwitch>,
    IAvaloniaConverter<ToggleSwitch>
{
    public override void Write(VerifyJsonWriter writer, ToggleSwitch value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        ToggleButtonConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ToggleSwitch value)
    {
        if (value.ShouldIncludeProperty(ToggleSwitch.OnContentProperty))
        if (!object.Equals(ToggleSwitch.OnContentProperty.GetDefaultValue(typeof(ToggleSwitch)), value.OnContent))
        {
            writer.WriteMember(value, value.OnContent, "OnContent");
        }
        if (value.ShouldIncludeProperty(ToggleSwitch.OffContentProperty))
        if (!object.Equals(ToggleSwitch.OffContentProperty.GetDefaultValue(typeof(ToggleSwitch)), value.OffContent))
        {
            writer.WriteMember(value, value.OffContent, "OffContent");
        }
        writer.WriteMember(value, value.OffContentPresenter, "OffContentPresenter");
        writer.WriteMember(value, value.OnContentPresenter, "OnContentPresenter");
        if (value.ShouldIncludeProperty(ToggleSwitch.OffContentTemplateProperty))
        if (!object.Equals(ToggleSwitch.OffContentTemplateProperty.GetDefaultValue(typeof(ToggleSwitch)), value.OffContentTemplate))
        {
            writer.WriteMember(value, value.OffContentTemplate, "OffContentTemplate");
        }
        if (value.ShouldIncludeProperty(ToggleSwitch.OnContentTemplateProperty))
        if (!object.Equals(ToggleSwitch.OnContentTemplateProperty.GetDefaultValue(typeof(ToggleSwitch)), value.OnContentTemplate))
        {
            writer.WriteMember(value, value.OnContentTemplate, "OnContentTemplate");
        }
        if (value.ShouldIncludeProperty(ToggleSwitch.KnobTransitionsProperty))
        if (!object.Equals(ToggleSwitch.KnobTransitionsProperty.GetDefaultValue(typeof(ToggleSwitch)), value.KnobTransitions))
        {
            writer.WriteMember(value, value.KnobTransitions, "KnobTransitions");
        }
    }

    public static bool MemberHasValue(ToggleSwitch target, string member, object? value)
    {
        if (member == "OnContent")
        {
            return object.Equals(target.OnContent, value);
        }
        if (member == "OffContent")
        {
            return object.Equals(target.OffContent, value);
        }
        if (member == "OffContentPresenter")
        {
            return object.Equals(target.OffContentPresenter, value);
        }
        if (member == "OnContentPresenter")
        {
            return object.Equals(target.OnContentPresenter, value);
        }
        if (member == "OffContentTemplate")
        {
            return object.Equals(target.OffContentTemplate, value);
        }
        if (member == "OnContentTemplate")
        {
            return object.Equals(target.OnContentTemplate, value);
        }
        if (member == "KnobTransitions")
        {
            return object.Equals(target.KnobTransitions, value);
        }
        ToggleButtonConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

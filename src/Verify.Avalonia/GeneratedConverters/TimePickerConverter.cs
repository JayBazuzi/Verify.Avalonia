// <auto-generated />
#nullable enable
class TimePickerConverter :
    WriteOnlyJsonConverter<TimePicker>,
    IAvaloniaConverter<TimePicker>
{
    public override void Write(VerifyJsonWriter writer, TimePicker value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, TimePicker value)
    {
        if (value.ShouldIncludeProperty(TimePicker.MinuteIncrementProperty))
        if (!object.Equals(TimePicker.MinuteIncrementProperty.GetDefaultValue(typeof(TimePicker)), value.MinuteIncrement))
        {
            writer.WriteMember(value, value.MinuteIncrement, "MinuteIncrement");
        }
        if (value.ShouldIncludeProperty(TimePicker.ClockIdentifierProperty))
        if (!object.Equals(TimePicker.ClockIdentifierProperty.GetDefaultValue(typeof(TimePicker)), value.ClockIdentifier))
        {
            writer.WriteMember(value, value.ClockIdentifier, "ClockIdentifier");
        }
        if (value.ShouldIncludeProperty(TimePicker.SelectedTimeProperty))
        if (!object.Equals(TimePicker.SelectedTimeProperty.GetDefaultValue(typeof(TimePicker)), value.SelectedTime))
        {
            writer.WriteMember(value, value.SelectedTime, "SelectedTime");
        }
    }

    public static bool MemberHasValue(TimePicker target, string member, object? value)
    {
        if (member == "MinuteIncrement")
        {
            return object.Equals(target.MinuteIncrement, value);
        }
        if (member == "ClockIdentifier")
        {
            return object.Equals(target.ClockIdentifier, value);
        }
        if (member == "SelectedTime")
        {
            return object.Equals(target.SelectedTime, value);
        }
        TemplatedControlConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

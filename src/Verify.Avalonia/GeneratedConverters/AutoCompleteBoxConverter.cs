// <auto-generated />
#nullable enable
class AutoCompleteBoxConverter :
    WriteOnlyJsonConverter<AutoCompleteBox>
{
    public override void Write(VerifyJsonWriter writer, AutoCompleteBox value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, AutoCompleteBox value)
    {
        var type = typeof(AutoCompleteBox);
        if (AutoCompleteBox.MinimumPrefixLengthProperty.ShouldIncludeProperty(value, value.MinimumPrefixLength))
        {
            writer.WriteMember(value, value.MinimumPrefixLength, "MinimumPrefixLength");
        }
        if (AutoCompleteBox.IsTextCompletionEnabledProperty.ShouldIncludeProperty(value, value.IsTextCompletionEnabled))
        {
            writer.WriteMember(value, value.IsTextCompletionEnabled, "IsTextCompletionEnabled");
        }
        if (AutoCompleteBox.ItemTemplateProperty.ShouldIncludeProperty(value, value.ItemTemplate))
        {
            writer.WriteMember(value, value.ItemTemplate, "ItemTemplate");
        }
        if (AutoCompleteBox.MinimumPopulateDelayProperty.ShouldIncludeProperty(value, value.MinimumPopulateDelay))
        {
            writer.WriteMember(value, value.MinimumPopulateDelay, "MinimumPopulateDelay");
        }
        if (AutoCompleteBox.MaxDropDownHeightProperty.ShouldIncludeProperty(value, value.MaxDropDownHeight))
        {
            writer.WriteMember(value, value.MaxDropDownHeight, "MaxDropDownHeight");
        }
        if (AutoCompleteBox.IsDropDownOpenProperty.ShouldIncludeProperty(value, value.IsDropDownOpen))
        {
            writer.WriteMember(value, value.IsDropDownOpen, "IsDropDownOpen");
        }
        writer.WriteMember(value, value.ValueMemberBinding, "ValueMemberBinding");
        if (AutoCompleteBox.SelectedItemProperty.ShouldIncludeProperty(value, value.SelectedItem))
        {
            writer.WriteMember(value, value.SelectedItem, "SelectedItem");
        }
        if (AutoCompleteBox.TextProperty.ShouldIncludeProperty(value, value.Text))
        {
            writer.WriteMember(value, value.Text, "Text");
        }
        if (AutoCompleteBox.SearchTextProperty.ShouldIncludeProperty(value, value.SearchText))
        {
            writer.WriteMember(value, value.SearchText, "SearchText");
        }
        if (AutoCompleteBox.FilterModeProperty.ShouldIncludeProperty(value, value.FilterMode))
        {
            writer.WriteMember(value, value.FilterMode, "FilterMode");
        }
        if (AutoCompleteBox.WatermarkProperty.ShouldIncludeProperty(value, value.Watermark))
        {
            writer.WriteMember(value, value.Watermark, "Watermark");
        }
        if (AutoCompleteBox.ItemFilterProperty.ShouldIncludeProperty(value, value.ItemFilter))
        {
            writer.WriteMember(value, value.ItemFilter, "ItemFilter");
        }
        if (AutoCompleteBox.TextFilterProperty.ShouldIncludeProperty(value, value.TextFilter))
        {
            writer.WriteMember(value, value.TextFilter, "TextFilter");
        }
        if (AutoCompleteBox.ItemSelectorProperty.ShouldIncludeProperty(value, value.ItemSelector))
        {
            writer.WriteMember(value, value.ItemSelector, "ItemSelector");
        }
        if (AutoCompleteBox.TextSelectorProperty.ShouldIncludeProperty(value, value.TextSelector))
        {
            writer.WriteMember(value, value.TextSelector, "TextSelector");
        }
        if (AutoCompleteBox.AsyncPopulatorProperty.ShouldIncludeProperty(value, value.AsyncPopulator))
        {
            writer.WriteMember(value, value.AsyncPopulator, "AsyncPopulator");
        }
        if (AutoCompleteBox.ItemsSourceProperty.ShouldIncludeProperty(value, value.ItemsSource))
        {
            writer.WriteMember(value, value.ItemsSource, "ItemsSource");
        }
    }
}

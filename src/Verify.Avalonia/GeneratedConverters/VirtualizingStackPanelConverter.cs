// <auto-generated />
#nullable enable
class VirtualizingStackPanelConverter :
    WriteOnlyJsonConverter<VirtualizingStackPanel>
{
    public override void Write(VerifyJsonWriter writer, VirtualizingStackPanel value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        VirtualizingPanelConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, VirtualizingStackPanel value)
    {
        if (!object.Equals(VirtualizingStackPanel.OrientationProperty.GetDefaultValue(typeof(VirtualizingStackPanel)), value.Orientation))
        {
            writer.WriteMember(value, value.Orientation, "Orientation");
        }
        if (!object.Equals(VirtualizingStackPanel.AreHorizontalSnapPointsRegularProperty.GetDefaultValue(typeof(VirtualizingStackPanel)), value.AreHorizontalSnapPointsRegular))
        {
            writer.WriteMember(value, value.AreHorizontalSnapPointsRegular, "AreHorizontalSnapPointsRegular");
        }
        if (!object.Equals(VirtualizingStackPanel.AreVerticalSnapPointsRegularProperty.GetDefaultValue(typeof(VirtualizingStackPanel)), value.AreVerticalSnapPointsRegular))
        {
            writer.WriteMember(value, value.AreVerticalSnapPointsRegular, "AreVerticalSnapPointsRegular");
        }
         writer.WriteMember(value, value.FirstRealizedIndex, "FirstRealizedIndex");
         writer.WriteMember(value, value.LastRealizedIndex, "LastRealizedIndex");
    }

    public static bool MemberHasValue(VirtualizingStackPanel target, string member, object? value)
    {
        if (member == "Orientation")
        {
            return object.Equals(target.Orientation, value);
        }
        if (member == "AreHorizontalSnapPointsRegular")
        {
            return object.Equals(target.AreHorizontalSnapPointsRegular, value);
        }
        if (member == "AreVerticalSnapPointsRegular")
        {
            return object.Equals(target.AreVerticalSnapPointsRegular, value);
        }
        if (member == "FirstRealizedIndex")
        {
            return object.Equals(target.FirstRealizedIndex, value);
        }
        if (member == "LastRealizedIndex")
        {
            return object.Equals(target.LastRealizedIndex, value);
        }
        VirtualizingPanelConverter.MemberHasValue(target, member, value);
        throw new($"Member not found: {member}");
    }
}

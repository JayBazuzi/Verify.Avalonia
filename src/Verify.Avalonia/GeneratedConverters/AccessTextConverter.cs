// <auto-generated />
#nullable enable
class AccessTextConverter :
    WriteOnlyJsonConverter<AccessText>
{
    public override void Write(VerifyJsonWriter writer, AccessText value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TextBlockConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, AccessText value)
    {
         writer.WriteMember(value, value.AccessKey, "AccessKey");
        if (!object.Equals(AccessText.ShowAccessKeyProperty.GetDefaultValue(typeof(AccessText)), value.ShowAccessKey))
        {
            writer.WriteMember(value, value.ShowAccessKey, "ShowAccessKey");
        }
    }

    public static bool MemberHasValue(AccessText target, string member, object? value)
    {
        if (member == "AccessKey")
        {
            return object.Equals(target.AccessKey, value);
        }
        if (member == "ShowAccessKey")
        {
            return object.Equals(target.ShowAccessKey, value);
        }
        throw new($"Member not found: {member}");
    }
}

// <auto-generated />
class SliderConverter :
    WriteOnlyJsonConverter<Slider>
{
    public override void Write(VerifyJsonWriter writer, Slider value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        RangeBaseConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, Slider value)
    {
         if (Slider.TicksProperty.GetDefaultValue(typeof(Slider)) != value.Ticks)
         {
             writer.WriteMember(value, value.Ticks, "Ticks");
         }
         if (Slider.OrientationProperty.GetDefaultValue(typeof(Slider)) != value.Orientation)
         {
             writer.WriteMember(value, value.Orientation, "Orientation");
         }
         if (Slider.IsDirectionReversedProperty.GetDefaultValue(typeof(Slider)) != value.IsDirectionReversed)
         {
             writer.WriteMember(value, value.IsDirectionReversed, "IsDirectionReversed");
         }
         if (Slider.IsSnapToTickEnabledProperty.GetDefaultValue(typeof(Slider)) != value.IsSnapToTickEnabled)
         {
             writer.WriteMember(value, value.IsSnapToTickEnabled, "IsSnapToTickEnabled");
         }
         if (Slider.TickFrequencyProperty.GetDefaultValue(typeof(Slider)) != value.TickFrequency)
         {
             writer.WriteMember(value, value.TickFrequency, "TickFrequency");
         }
         if (Slider.TickPlacementProperty.GetDefaultValue(typeof(Slider)) != value.TickPlacement)
         {
             writer.WriteMember(value, value.TickPlacement, "TickPlacement");
         }
    }
}

// <auto-generated />
class RangeBaseConverter :
    WriteOnlyJsonConverter<RangeBase>
{
    public override void Write(VerifyJsonWriter writer, RangeBase value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        TemplatedControlConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, RangeBase value)
    {
         if (RangeBase.MinimumProperty.GetDefaultValue(typeof(RangeBase)) == value.Minimum)
         {
             writer.WriteMember(value, value.Minimum, "Minimum");
         }
         if (RangeBase.MaximumProperty.GetDefaultValue(typeof(RangeBase)) == value.Maximum)
         {
             writer.WriteMember(value, value.Maximum, "Maximum");
         }
         if (RangeBase.ValueProperty.GetDefaultValue(typeof(RangeBase)) == value.Value)
         {
             writer.WriteMember(value, value.Value, "Value");
         }
         if (RangeBase.SmallChangeProperty.GetDefaultValue(typeof(RangeBase)) == value.SmallChange)
         {
             writer.WriteMember(value, value.SmallChange, "SmallChange");
         }
         if (RangeBase.LargeChangeProperty.GetDefaultValue(typeof(RangeBase)) == value.LargeChange)
         {
             writer.WriteMember(value, value.LargeChange, "LargeChange");
         }
    }
}

// <auto-generated />
class ProgressBarConverter :
    WriteOnlyJsonConverter<ProgressBar>
{
    public override void Write(VerifyJsonWriter writer, ProgressBar value)
    {
        writer.WriteStartObject();
        VerifyAvalonia.WriteGeneratedMembers(writer, value);
        WriteMembers(writer, value);
        RangeBaseConverter.WriteMembers(writer, value);
        writer.WriteEndObject();
    }

    public static void WriteMembers(VerifyJsonWriter writer, ProgressBar value)
    {
         if (ProgressBar.PercentageProperty.GetUnsetValue(typeof(ProgressBar)) == value.Percentage)
         {
             writer.WriteMember(value, value.Percentage, "Percentage");
         }
         writer.WriteMember(value, value.TemplateSettings, "TemplateSettings");
         if (ProgressBar.IsIndeterminateProperty.GetDefaultValue(typeof(ProgressBar)) == value.IsIndeterminate)
         {
             writer.WriteMember(value, value.IsIndeterminate, "IsIndeterminate");
         }
         if (ProgressBar.ShowProgressTextProperty.GetDefaultValue(typeof(ProgressBar)) == value.ShowProgressText)
         {
             writer.WriteMember(value, value.ShowProgressText, "ShowProgressText");
         }
         if (ProgressBar.ProgressTextFormatProperty.GetDefaultValue(typeof(ProgressBar)) == value.ProgressTextFormat)
         {
             writer.WriteMember(value, value.ProgressTextFormat, "ProgressTextFormat");
         }
         if (ProgressBar.OrientationProperty.GetDefaultValue(typeof(ProgressBar)) == value.Orientation)
         {
             writer.WriteMember(value, value.Orientation, "Orientation");
         }
    }
}
